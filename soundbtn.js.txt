//button tang in html
<button id="myButton">Play Sound</button>
//link for n5 library
<!-- p5.js Libraries -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/p5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.dom.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.3/addons/p5.sound.min.js"></script>


// Ensure the script runs after the DOM is fully loaded
document.addEventListener("DOMContentLoaded", function() {
  let audioContext;  // Declare the AudioContext variable
  let myButton = document.getElementById("myButton");

  // Ensure the button is found before adding the event listener
  if (myButton) {
      myButton.addEventListener("click", function() {
          // Check if AudioContext has already been created, if not, create it
          if (!audioContext) {
              audioContext = new (window.AudioContext || window.webkitAudioContext)();
          }

          // Ensure AudioContext is resumed after a user gesture
          if (audioContext.state === "suspended") {
              audioContext.resume().then(() => {
                  console.log("AudioContext resumed after user interaction.");
              });
          }

          // Create an oscillator node
          let oscillator = audioContext.createOscillator();
          oscillator.type = "sine";  // Type of wave (sine, square, sawtooth, etc.)
          oscillator.frequency.setValueAtTime(440, audioContext.currentTime); // Frequency of the sound (440Hz is A4 note)

          // Create a gain node to control volume
          let gainNode = audioContext.createGain();
          gainNode.gain.setValueAtTime(0.1, audioContext.currentTime); // Volume control (0.1 is low)

          // Connect the oscillator to the gain node and then to the audio context's destination (speakers)
          oscillator.connect(gainNode);
          gainNode.connect(audioContext.destination);

          // Start the oscillator (sound will play)
          oscillator.start();

          // Stop the oscillator after 1 second
          oscillator.stop(audioContext.currentTime + 1);
      });
  } else {
      console.error("Button not found!");
  }
});

